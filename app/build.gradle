apply plugin: 'com.android.application'
apply plugin: 'bugly'
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    aaptOptions.cruncherEnabled =false
    aaptOptions.useNewCruncher =false
    signingConfigs {
        release_sign {
            Properties buildPro = buildSign()
            keyAlias buildPro['key_alias']
            keyPassword buildPro['key_password']
            storeFile file(buildPro['store_file'])
            storePassword buildPro['store_password']
            v2SigningEnabled true
            v1SigningEnabled true
        }
    }
    defaultConfig {
        applicationId "com.huimv.hyyz"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "V1.0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                GETUI_APP_ID : "WeAMRkV2md9kTcWM9qip83",
                GETUI_APP_KEY : "X8AEg5K4ed62pZz2FyHBE4",
                GETUI_APP_SECRET : "zxbpScrkMv7VW9irul0fs1"
        ]
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a'//, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release_sign
        }

    }


    //自动生成apk名字
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def vName = defaultConfig.versionName
            def buildType = variant.buildType.name
            outputFileName = "hyyz_${vName}_${buildType}_${releaseTime()}.apk"
        }

    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories{
        flatDir{
            dirs 'libs' //就是你放aar的目录地址
        }
    }
}

bugly {
    appId = '627bf454d1' // 注册时分配的App ID
    appKey = '8b8be3e1-3a8a-4f1b-8ea0-9dc4c0cba3c4' // 注册时分配的App Key
}
def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}
//读取签名配置并返回Properties
def buildSign() {
    def Properties buildProperties = new Properties()
    buildProperties.load(new FileInputStream(file("../local.properties")))
    return buildProperties
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.orhanobut:logger:1.3'
    implementation 'com.makeramen:roundedimageview:2.1.1'
    implementation 'com.github.lzyzsd:jsbridge:1.0.4'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    testImplementation 'junit:junit:4.12'
    implementation project(':slidelibrary')
    implementation project(':base-library')
    implementation files('libs/json_simple-1.1.jar')
    implementation files('libs/ksoap2-android-assembly-2.5.4-jar-with-dependencies.jar')
    implementation files('libs/universal-image-loader-1.8.4.jar')
    implementation files('libs/zxing3.1.jar')
}
